import{_ as a,c as s,o,ag as i}from"./chunks/framework.BRWBV1zN.js";const h=JSON.parse('{"title":"Handshake","description":"","frontmatter":{},"headers":[],"relativePath":"io/modules/handshake.md","filePath":"io/modules/handshake.md","lastUpdated":1753049028000}'),n={name:"io/modules/handshake.md"};function t(d,e,r,c,l,m){return o(),s("div",null,e[0]||(e[0]=[i(`<h1 id="handshake" tabindex="-1">Handshake <a class="header-anchor" href="#handshake" aria-label="Permalink to &quot;Handshake&quot;">​</a></h1><p>El <em>handshake</em> es un dispotivo diseñado con el fin de facilitar la comunicación con las <a href="./../devices/printer.html">impresoras Centronics</a>. Está basado en el PPI 8255 de Intel en su modo &quot;1&quot;, pero con algunas modificaciones para simplificar su funcionamiento.</p><p>Este cuenta con dos registros de 8 bits:</p><ul><li>el registro de datos (dirección <code>40h</code> de la <a href="./index.html">memoria E/S</a>),</li><li>y el registro de estado (dirección <code>41h</code> de la <a href="./index.html">memoria E/S</a>).</li></ul><p>Específicamente,</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Datos  = DDDD DDDD</span></span>
<span class="line"><span>Estado = I___ __SB</span></span></code></pre></div><p>En el registro de datos se almacenará carácter a imprimir, expresado en ASCII. Cada vez que la CPU escriba sobre ese registro, el <em>handshake</em> se encargará de realizar un flanco ascendente en el <em>strobe</em> para que el carácter se imprima automáticamente.</p><p>En el registro de estado, los dos bits menos significativos son el <em>strobe</em> y <em>busy</em> (<a href="./../devices/printer.html">leer más sobre los mismos</a>), análogamente a como se usan en una impresora conectada con un PIO. La diferencia es que el bit de <em>busy</em> no puede ser modificado por la CPU y el bit de <em>strobe</em> siempre es <code>0</code>. Si la CPU trata de escribir un <code>1</code> en el bit de <em>strobe</em>, este causará un flanco ascendente en el <em>strobe</em>, enviando lo almacenado en el registro de datos, y el handshake lo volverá a <code>0</code> automáticamente.</p><p>Además, el bit más significativo del registro de estado habilita/inhabilita las interrupciones. Si este bit es <code>1</code>, mientras la impresora no esté ocupada (<code>B=0</code>), el Handshake disparará una interrupción por hardware. Está conectado al puerto <code>INT2</code> del <a href="./pic.html">PIC</a>.</p>`,9)]))}const u=a(n,[["render",t]]);export{h as __pageData,u as default};
