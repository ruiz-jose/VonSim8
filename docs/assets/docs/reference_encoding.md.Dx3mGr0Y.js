import{_ as e,c as d,o,ag as c}from"./chunks/framework.BRWBV1zN.js";const x=JSON.parse('{"title":"Codificación","description":"","frontmatter":{},"headers":[],"relativePath":"reference/encoding.md","filePath":"reference/encoding.md","lastUpdated":1758041073000}'),r={name:"reference/encoding.md"};function n(i,t,l,a,s,g){return o(),d("div",null,t[0]||(t[0]=[c('<h1 id="codificacion" tabindex="-1">Codificación <a class="header-anchor" href="#codificacion" aria-label="Permalink to &quot;Codificación&quot;">​</a></h1><p>Aquí se denota la codificación en binario de cada una de las instrucciones del simulador. Pese a que el set de instrucciones esté basado en el del Intel 8088, la codificación se simplificado con fines prácticos y didácticos.</p><h2 id="acronimos-y-abreviaciones" tabindex="-1">Acrónimos y abreviaciones <a class="header-anchor" href="#acronimos-y-abreviaciones" aria-label="Permalink to &quot;Acrónimos y abreviaciones&quot;">​</a></h2><p>A lo largo de la codificación se usan las siguientes abreviaturas:</p><ul><li><p><code>Rx</code> o <code>Ry</code>: referencian registros.</p><table tabindex="0"><thead><tr><th style="text-align:center;"><code>Código</code></th><th style="text-align:center;"><code>Nombre</code></th></tr></thead><tbody><tr><td style="text-align:center;"><code>00</code></td><td style="text-align:center;"><code>AL</code></td></tr><tr><td style="text-align:center;"><code>01</code></td><td style="text-align:center;"><code>CL</code></td></tr><tr><td style="text-align:center;"><code>10</code></td><td style="text-align:center;"><code>DL</code></td></tr><tr><td style="text-align:center;"><code>11</code></td><td style="text-align:center;"><code>BL</code></td></tr></tbody></table></li></ul><p>La codificación de instrucciones en VonSim8 está simplificada para fines didácticos, permitiendo a los estudiantes centrarse en los conceptos fundamentales sin la complejidad técnica de arquitecturas reales.</p><table tabindex="0"><thead><tr><th>#</th><th>Instrucción</th><th>Acción</th><th>Codificación</th></tr></thead><tbody><tr><td>0</td><td><code>MOV Rx, Ry</code></td><td><code>Rx</code> ← <code>Ry</code></td><td><code>0000 XXYY</code></td></tr><tr><td>1</td><td><code>MOV Rx, [M]</code></td><td><code>Rx</code> ← <code>Mem[Dirección]</code></td><td><code>0001 XX00 DDDDDDDD</code></td></tr><tr><td>1</td><td><code>MOV Rx, [BL]</code></td><td><code>Rx</code> ← <code>Mem[BL]</code></td><td><code>0001 XX01</code></td></tr><tr><td>1</td><td><code>MOV Rx, D</code></td><td><code>Rx</code> ← <code>Dato</code></td><td><code>0001 XX10 DDDDDDDD</code></td></tr><tr><td>2</td><td><code>MOV [M], Ry</code></td><td><code>Mem[Dirección]</code> ← <code>Rx</code></td><td><code>0010 00YY DDDDDDDD</code></td></tr><tr><td>2</td><td><code>MOV [BL], Ry</code></td><td><code>Mem[BL]</code> ← <code>Rx</code></td><td><code>0010 01YY</code></td></tr><tr><td>2</td><td><code>MOV [M], D</code></td><td><code>Mem[Dirección]</code> ← <code>Dato</code></td><td><code>0010 1100 DDDDDDDD dddddddd</code></td></tr><tr><td>2</td><td><code>MOV [BL], D</code></td><td><code>Mem[BL]</code> ← <code>Dato</code></td><td><code>0010 1101 DDDDDDDD</code></td></tr><tr><td>3</td><td><code>ADD Rx, Ry</code></td><td><code>Rx</code> ← <code>Rx + Ry</code></td><td><code>0011 XXYY</code></td></tr><tr><td>4</td><td><code>ADD --, --</code></td><td>Mismo direccionamientos que MOV</td><td><code>0100 ---- --------</code></td></tr><tr><td>5</td><td><code>ADD --, --</code></td><td>Mismo direccionamientos que MOV</td><td><code>0101 ---- -------- --------</code></td></tr><tr><td>6</td><td><code>SUB Rx, Ry</code></td><td><code>Rx</code> ← <code>Rx - Ry</code></td><td><code>0110 XXYY</code></td></tr><tr><td>7</td><td><code>SUB --, --</code></td><td>Mismo direccionamientos que MOV</td><td><code>0111 ---- --------</code></td></tr><tr><td>8</td><td><code>SUB --, --</code></td><td>Mismo direccionamientos que MOV</td><td><code>1000 ---- -------- --------</code></td></tr><tr><td>9</td><td><code>CMP Rx, Ry</code></td><td>Modifica <em>flags</em> de <code>Rx - Ry</code></td><td><code>1001 XXYY</code></td></tr><tr><td>A</td><td><code>CMP --, --</code></td><td>Mismo direccionamientos que MOV</td><td><code>1010 ---- --------</code></td></tr><tr><td>B</td><td><code>CMP --, --</code></td><td>Mismo direccionamientos que MOV</td><td><code>1011 ---- -------- --------</code></td></tr><tr><td>C</td><td><code>JMP M</code></td><td><code>IP</code> ← <code>Dirección</code></td><td><code>1100 0000 DDDDDDDD</code></td></tr><tr><td>C</td><td><code>JC M</code></td><td>Si <code>flag C=1</code> entonces <code>IP</code> ← <code>Dirección</code></td><td><code>1100 0001 DDDDDDDD</code></td></tr><tr><td>C</td><td><code>JZ M</code></td><td>Si <code>flag Z=1</code> entonces <code>IP</code> ← <code>Dirección</code></td><td><code>1100 0011 DDDDDDDD</code></td></tr><tr><td>C</td><td><code>Jxx M</code></td><td>Se pueden implemementar más flags y CALL</td><td><code>1100 ffff --------</code></td></tr></tbody></table><p>Estas instrucciones reciben dos operandos y soportan varios modos de direccionamiento. Esta información está codificada en el primer Byte junto al código de operación de la instrucción según la siguiente tabla:</p><table tabindex="0"><thead><tr><th style="text-align:left;">Destino</th><th style="text-align:left;">Fuente</th><th style="text-align:center;">Primer Byte</th><th style="text-align:left;">Segundo Byte</th><th style="text-align:left;">Tercer Byte</th></tr></thead><tbody><tr><td style="text-align:left;">Registro</td><td style="text-align:left;">Registro</td><td style="text-align:center;"><code>----RxRy</code></td><td style="text-align:left;">—</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Registro</td><td style="text-align:left;">Memoria (directo)</td><td style="text-align:center;"><code>----Rx00</code></td><td style="text-align:left;">dir</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Registro</td><td style="text-align:left;">Memoria (indirecto)</td><td style="text-align:center;"><code>----Rx01</code></td><td style="text-align:left;">—</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Registro</td><td style="text-align:left;">Inmediato</td><td style="text-align:center;"><code>----Rx10</code></td><td style="text-align:left;">dato</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Memoria (directo)</td><td style="text-align:left;">Registro</td><td style="text-align:center;"><code>----00Ry</code></td><td style="text-align:left;">dir</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Memoria (indirecto)</td><td style="text-align:left;">Registro</td><td style="text-align:center;"><code>----01Ry</code></td><td style="text-align:left;">dir</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Memoria (directo)</td><td style="text-align:left;">Inmediato</td><td style="text-align:center;"><code>----1100</code></td><td style="text-align:left;">dir</td><td style="text-align:left;">dato</td></tr><tr><td style="text-align:left;">Memoria (indirecto)</td><td style="text-align:left;">Inmediato</td><td style="text-align:center;"><code>----1101</code></td><td style="text-align:left;">dato</td><td style="text-align:left;"></td></tr></tbody></table><h2 id="formato-de-instrucciones" tabindex="-1">Formato de instrucciones <a class="header-anchor" href="#formato-de-instrucciones" aria-label="Permalink to &quot;Formato de instrucciones&quot;">​</a></h2><p>Las instrucciones están codificadas con 1, 2 o 3 bytes. Los primeros 4 bits identifican el <code>opcode</code> de la instrucción y determinan como se tienen que ise interpretar los 4 bits restantes.</p><table tabindex="0"><thead><tr><th>Caso</th><th>Codificación</th><th>Parámetros</th></tr></thead><tbody><tr><td>A: entre registros</td><td><code>---- XXYY</code></td><td><code>XX</code> = Registro destino, <code>YY</code> = Registro fuente</td></tr><tr><td>B: Cargar a registro</td><td><code>---- XXmm DDDDDDDD</code></td><td><code>mm</code> = modo, <code>XX</code> = Registro destino, <code>D</code> = Dirección de memoria o Dato Inmediato</td></tr><tr><td>C: Almacenar en memoria</td><td><code>---- mmmm DDDDDDDD dddddddd</code></td><td><code>mmmm</code> = modo ampliado, <code>D</code> = Dirección de memoria, <code>d</code> = Dato Inmediato</td></tr><tr><td>D: control de flujo</td><td><code>---- ffff DDDDDDDD</code></td><td><code>ffff</code> = funcionalidad <code>D</code> = Dirección de memoria</td></tr></tbody></table><p><code>d</code> = Dato Inmediato, no puede ser destino de la instrucción.</p><ul><li><strong>dato</strong> se refiere al byte de un dato inmediato.</li><li><strong>dir</strong> se refiere al word de una dirección.</li></ul><table tabindex="0"><thead><tr><th style="text-align:center;">Modo direccionamientos B: Cargar a registro</th><th style="text-align:center;"></th><th style="text-align:center;"></th></tr></thead><tbody><tr><td style="text-align:center;"><strong><code>mm</code>= Modo</strong></td><td style="text-align:center;"><strong><code>Byte</code>= tamaño</strong></td><td style="text-align:center;"><strong>Interpretación</strong></td></tr><tr><td style="text-align:center;">00</td><td style="text-align:center;">2</td><td style="text-align:center;">directo <code>D</code> = Dirección de memoria</td></tr><tr><td style="text-align:center;">01</td><td style="text-align:center;">1</td><td style="text-align:center;">indirecto utiliza como operando implicito el registro <code>BL</code> y no requiere operando <code>D</code></td></tr><tr><td style="text-align:center;">10</td><td style="text-align:center;">2</td><td style="text-align:center;">Inmediato <code>D</code> = Dato Inmediato</td></tr></tbody></table><hr><table tabindex="0"><thead><tr><th style="text-align:center;">Modo direccionamientos C: Almacenar en memoria</th><th style="text-align:center;"></th><th style="text-align:center;"></th></tr></thead><tbody><tr><td style="text-align:center;"><strong><code>mmmm</code>= Modo</strong></td><td style="text-align:center;"><strong><code>Byte</code>= tamaño</strong></td><td style="text-align:center;"><strong>Interpretación</strong></td></tr><tr><td style="text-align:center;">00YY</td><td style="text-align:center;">2</td><td style="text-align:center;">directo <code>D</code> = Dirección de memoria, <code>YY</code> = Registro fuente</td></tr><tr><td style="text-align:center;">01YY</td><td style="text-align:center;">1</td><td style="text-align:center;">indirecto <code>BL</code>, <code>YY</code> = Registro fuente</td></tr><tr><td style="text-align:center;">1100</td><td style="text-align:center;">3</td><td style="text-align:center;">Inmediato a memoria</td></tr><tr><td style="text-align:center;">1101</td><td style="text-align:center;">2</td><td style="text-align:center;">Inmediato a memoria mediante indirecto <code>BL</code></td></tr></tbody></table><h2 id="instrucciones-binarias-de-la-alu" tabindex="-1">Instrucciones binarias de la ALU <a class="header-anchor" href="#instrucciones-binarias-de-la-alu" aria-label="Permalink to &quot;Instrucciones binarias de la ALU&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:center;">Instrucción</th><th style="text-align:center;">Opcode</th></tr></thead><tbody><tr><td style="text-align:center;"><code>MOV</code></td><td style="text-align:center;"><code>0000 w</code></td></tr><tr><td style="text-align:center;"><code>AND</code></td><td style="text-align:center;"><code>0001 w</code></td></tr><tr><td style="text-align:center;"><code>OR</code></td><td style="text-align:center;"><code>0010 w</code></td></tr><tr><td style="text-align:center;"><code>XOR</code></td><td style="text-align:center;"><code>0011 w</code></td></tr><tr><td style="text-align:center;"><code>ADD</code></td><td style="text-align:center;"><code>0100 w</code></td></tr><tr><td style="text-align:center;"><code>ADC</code></td><td style="text-align:center;"><code>0101 w</code></td></tr><tr><td style="text-align:center;"><code>SUB</code></td><td style="text-align:center;"><code>0110 w</code></td></tr><tr><td style="text-align:center;"><code>SBB</code></td><td style="text-align:center;"><code>0111 w</code></td></tr><tr><td style="text-align:center;"><code>TEST</code></td><td style="text-align:center;"><code>0001 w</code></td></tr><tr><td style="text-align:center;"><code>CMP</code></td><td style="text-align:center;"><code>0110 w</code></td></tr></tbody></table><p>Estas instrucciones reciben dos operandos y soportan varios modos de direccionamiento. Esta información está codificada en el bit <code>d</code> y el segundo byte de la instrucción según la siguiente tabla:</p><table tabindex="0"><thead><tr><th style="text-align:left;">Destino</th><th style="text-align:left;">Fuente</th><th style="text-align:center;">Segundo byte</th><th style="text-align:left;">Bytes siguientes</th></tr></thead><tbody><tr><td style="text-align:left;">Registro</td><td style="text-align:left;">Registro</td><td style="text-align:center;"><code>00RRRrrr</code></td><td style="text-align:left;">—</td></tr><tr><td style="text-align:left;">Registro</td><td style="text-align:left;">Memoria (directo)</td><td style="text-align:center;"><code>01000rrr</code></td><td style="text-align:left;">dir-low, dir-high</td></tr><tr><td style="text-align:left;">Registro</td><td style="text-align:left;">Memoria (indirecto)</td><td style="text-align:center;"><code>01010rrr</code></td><td style="text-align:left;">—</td></tr><tr><td style="text-align:left;">Registro</td><td style="text-align:left;">Memoria (indirecto con desplazamiento)</td><td style="text-align:center;"><code>01100rrr</code></td><td style="text-align:left;">desp-low, desp-high</td></tr><tr><td style="text-align:left;">Registro</td><td style="text-align:left;">Inmediato</td><td style="text-align:center;"><code>01001rrr</code></td><td style="text-align:left;">dato-low, dato-high</td></tr><tr><td style="text-align:left;">Memoria (directo)</td><td style="text-align:left;">Registro</td><td style="text-align:center;"><code>11000rrr</code></td><td style="text-align:left;">dir-low, dir-high</td></tr><tr><td style="text-align:left;">Memoria (indirecto)</td><td style="text-align:left;">Registro</td><td style="text-align:center;"><code>11010rrr</code></td><td style="text-align:left;">—</td></tr><tr><td style="text-align:left;">Memoria (indirecto con desplazamiento)</td><td style="text-align:left;">Registro</td><td style="text-align:center;"><code>11100rrr</code></td><td style="text-align:left;">desp-low, desp-high</td></tr><tr><td style="text-align:left;">Memoria (directo)</td><td style="text-align:left;">Inmediato</td><td style="text-align:center;"><code>11001000</code></td><td style="text-align:left;">dir-low, dir-high, dato-low, dato-high</td></tr><tr><td style="text-align:left;">Memoria (indirecto)</td><td style="text-align:left;">Inmediato</td><td style="text-align:center;"><code>11011000</code></td><td style="text-align:left;">dato-low, dato-high</td></tr><tr><td style="text-align:left;">Memoria (indirecto con desplazamiento)</td><td style="text-align:left;">Inmediato</td><td style="text-align:center;"><code>11101000</code></td><td style="text-align:left;">desp-low, desp-high, dato-low, dato-high</td></tr></tbody></table><p>Para las instrucciones con un registro como operando, <code>rrr</code> codifica este registro. En el caso registro a registro, <code>RRR</code> codifica el registro fuente y <code>rrr</code> el registro destino.</p><h2 id="instrucciones-unarias-de-la-alu" tabindex="-1">Instrucciones unarias de la ALU <a class="header-anchor" href="#instrucciones-unarias-de-la-alu" aria-label="Permalink to &quot;Instrucciones unarias de la ALU&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:center;">Instrucción</th><th style="text-align:center;">Opcode</th></tr></thead><tbody><tr><td style="text-align:center;"><code>NOT</code></td><td style="text-align:center;"><code>0100 000 w</code></td></tr><tr><td style="text-align:center;"><code>NEG</code></td><td style="text-align:center;"><code>0100 001 w</code></td></tr><tr><td style="text-align:center;"><code>INC</code></td><td style="text-align:center;"><code>0100 010 w</code></td></tr><tr><td style="text-align:center;"><code>DEC</code></td><td style="text-align:center;"><code>0100 011 w</code></td></tr></tbody></table><p>Estas instrucciones reciben un operando y soportan varios modos de direccionamiento. Esta información está codificada el segundo byte de la instrucción según la siguiente tabla:</p><table tabindex="0"><thead><tr><th style="text-align:left;">Destino</th><th style="text-align:center;">Segundo byte</th><th style="text-align:left;">Bytes siguientes</th></tr></thead><tbody><tr><td style="text-align:left;">Registro</td><td style="text-align:center;"><code>00000rrr</code></td><td style="text-align:left;">—</td></tr><tr><td style="text-align:left;">Memoria (directo)</td><td style="text-align:center;"><code>11000000</code></td><td style="text-align:left;">dir-low, dir-high</td></tr><tr><td style="text-align:left;">Memoria (indirecto)</td><td style="text-align:center;"><code>11010000</code></td><td style="text-align:left;">—</td></tr><tr><td style="text-align:left;">Memoria (indirecto con desplazamiento)</td><td style="text-align:center;"><code>11100000</code></td><td style="text-align:left;">desp-low, desp-high</td></tr></tbody></table><h2 id="instrucciones-de-e-s" tabindex="-1">Instrucciones de E/S <a class="header-anchor" href="#instrucciones-de-e-s" aria-label="Permalink to &quot;Instrucciones de E/S&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:center;">Instrucción</th><th style="text-align:center;">Opcode</th></tr></thead><tbody><tr><td style="text-align:center;"><code>IN</code></td><td style="text-align:center;"><code>0101 00 pw</code></td></tr><tr><td style="text-align:center;"><code>OUT</code></td><td style="text-align:center;"><code>0101 01 pw</code></td></tr></tbody></table><p>El bit <code>p</code> codifica</p><ul><li>si el puerto es fijo (<code>p=0</code>), el cual se tendrá que proveer en el siguiente byte (puerto máximo: 255),</li><li>o si el puerto es variable (<code>p=1</code>), caso en el cual se usará el valor almacenado en el registro <code>DX</code> como puerto.</li></ul><h2 id="instrucciones-relacionadas-a-la-pila" tabindex="-1">Instrucciones relacionadas a la pila <a class="header-anchor" href="#instrucciones-relacionadas-a-la-pila" aria-label="Permalink to &quot;Instrucciones relacionadas a la pila&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:center;">Instrucción</th><th style="text-align:center;">Opcode</th></tr></thead><tbody><tr><td style="text-align:center;"><code>PUSH</code></td><td style="text-align:center;"><code>0110 0rrr</code></td></tr><tr><td style="text-align:center;"><code>POP</code></td><td style="text-align:center;"><code>0110 1rrr</code></td></tr><tr><td style="text-align:center;"><code>PUSHF</code></td><td style="text-align:center;"><code>0111 0000</code></td></tr><tr><td style="text-align:center;"><code>POPF</code></td><td style="text-align:center;"><code>0111 1000</code></td></tr></tbody></table><p><code>rrr</code> siempre representa un registro de 16 bits.</p><h2 id="instrucciones-de-salto" tabindex="-1">Instrucciones de salto <a class="header-anchor" href="#instrucciones-de-salto" aria-label="Permalink to &quot;Instrucciones de salto&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:center;">Instrucción</th><th style="text-align:center;">Opcode</th></tr></thead><tbody><tr><td style="text-align:center;"><code>JC</code></td><td style="text-align:center;"><code>0010 0000</code></td></tr><tr><td style="text-align:center;"><code>JNC</code></td><td style="text-align:center;"><code>0010 0001</code></td></tr><tr><td style="text-align:center;"><code>JZ</code></td><td style="text-align:center;"><code>0010 0010</code></td></tr><tr><td style="text-align:center;"><code>JNZ</code></td><td style="text-align:center;"><code>0010 0011</code></td></tr><tr><td style="text-align:center;"><code>JS</code></td><td style="text-align:center;"><code>0010 0100</code></td></tr><tr><td style="text-align:center;"><code>JNS</code></td><td style="text-align:center;"><code>0010 0101</code></td></tr><tr><td style="text-align:center;"><code>JO</code></td><td style="text-align:center;"><code>0010 0110</code></td></tr><tr><td style="text-align:center;"><code>JNO</code></td><td style="text-align:center;"><code>0010 0111</code></td></tr><tr><td style="text-align:center;"><code>JMP</code></td><td style="text-align:center;"><code>0011 0000</code></td></tr><tr><td style="text-align:center;"><code>CALL</code></td><td style="text-align:center;"><code>0011 0001</code></td></tr><tr><td style="text-align:center;"><code>RET</code></td><td style="text-align:center;"><code>0011 0011</code></td></tr></tbody></table><p>Luego del opcode, estas instrucciones (salvo <code>RET</code>) reciben una dirección absoluta de memoria (que ocupa dos bytes).</p><h2 id="instrucciones-relacionadas-a-las-interrupciones" tabindex="-1">Instrucciones relacionadas a las interrupciones <a class="header-anchor" href="#instrucciones-relacionadas-a-las-interrupciones" aria-label="Permalink to &quot;Instrucciones relacionadas a las interrupciones&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:center;">Instrucción</th><th style="text-align:center;">Opcode</th></tr></thead><tbody><tr><td style="text-align:center;"><code>CLI</code></td><td style="text-align:center;"><code>0001 1000</code></td></tr><tr><td style="text-align:center;"><code>STI</code></td><td style="text-align:center;"><code>0001 1001</code></td></tr><tr><td style="text-align:center;"><code>INT</code></td><td style="text-align:center;"><code>0001 1010</code></td></tr><tr><td style="text-align:center;"><code>IRET</code></td><td style="text-align:center;"><code>0001 1011</code></td></tr></tbody></table><p>Luego del opcode, <code>INT</code> recibe el número de instrucción (ocupa un byte).</p><h2 id="otras-instrucciones" tabindex="-1">Otras instrucciones <a class="header-anchor" href="#otras-instrucciones" aria-label="Permalink to &quot;Otras instrucciones&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:center;">Instrucción</th><th style="text-align:center;">Opcode</th></tr></thead><tbody><tr><td style="text-align:center;"><code>NOP</code></td><td style="text-align:center;"><code>0001 0000</code></td></tr><tr><td style="text-align:center;"><code>HLT</code></td><td style="text-align:center;"><code>0001 0001</code></td></tr></tbody></table>',41)]))}const h=e(r,[["render",n]]);export{x as __pageData,h as default};
