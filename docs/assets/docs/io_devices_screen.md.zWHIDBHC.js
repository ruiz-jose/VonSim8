import{_ as s,c as i,o as e,ag as l}from"./chunks/framework.BRWBV1zN.js";const k=JSON.parse('{"title":"Pantalla","description":"","frontmatter":{},"headers":[],"relativePath":"io/devices/screen.md","filePath":"io/devices/screen.md","lastUpdated":1753572803000}'),n={name:"io/devices/screen.md"};function t(p,a,r,d,c,o){return e(),i("div",null,a[0]||(a[0]=[l(`<h1 id="pantalla" tabindex="-1">Pantalla <a class="header-anchor" href="#pantalla" aria-label="Permalink to &quot;Pantalla&quot;">​</a></h1><p>La pantalla es un dispositivo de salida que permite mostrar caracteres. La forma de comunicarse con la pantalla es mediante una <a href="./../../computer/cpu.html#llamadas-al-sistema">llamada al sistema</a>. Esto es así por simplicidad, ya que una pantalla real es mucho más compleja.</p><p>Con la llamada <code>INT 7</code> se escribe una cadena de caracteres en la pantalla. Recibe dos parámetros:</p><ul><li><code>AL</code>: longitud de la cadena a imprimir</li><li><code>BL</code>: dirección de memoria donde empieza la cadena</li></ul><div class="language-vonsim vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vonsim</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">org</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10h</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cadena </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">db</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Hola!&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">org</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 20h</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mov</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> BL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">offset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cadena</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mov</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">int</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 7</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">; Se imprime &quot;Hola!&quot; (sin las comillas) en la pantalla.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hlt</span></span></code></pre></div><p>Hay tres caracteres especiales:</p><ul><li>el carácter de retroceso (<code>BS</code>, 8 en decimal) borra el carácter previo;</li><li>el carácter de salto de línea (<code>LF</code>, 10 en decimal) imprime, en efecto, un salto de línea — útil para no imprimir todo en una sola línea;</li><li>el carácter de <em>form feed</em> (<code>FF</code>, 12 en decimal) limpia la pantalla.</li></ul>`,7)]))}const m=s(n,[["render",t]]);export{k as __pageData,m as default};
