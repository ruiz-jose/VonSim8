import{_ as i,c as s,o as e,ag as t}from"./chunks/framework.BRWBV1zN.js";const u=JSON.parse('{"title":"CALL","description":"","frontmatter":{},"headers":[],"relativePath":"computer/instructions/call.md","filePath":"computer/instructions/call.md","lastUpdated":1757719181000}'),n={name:"computer/instructions/call.md"};function l(c,a,o,p,r,d){return e(),s("div",null,a[0]||(a[0]=[t(`<h1 id="call" tabindex="-1">CALL <a class="header-anchor" href="#call" aria-label="Permalink to &quot;CALL&quot;">​</a></h1><p>Esta instrucción inicializa una <a href="./../cpu.html#subrutinas">subrutina</a>. Los <a href="./../cpu.html#flags"><em>flags</em></a> no se modifican.</p><p>Primero, se apila la dirección de retorno (la dirección de la instrucción siguiente a <code>CALL</code>) en la <a href="./../cpu.html#pila">pila</a>. Luego, se salta a la dirección de la subrutina, es decir, copia la dirección de salto en <code>IP</code>.</p><h2 id="uso" tabindex="-1">Uso <a class="header-anchor" href="#uso" aria-label="Permalink to &quot;Uso&quot;">​</a></h2><div class="language-vonsim vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vonsim</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CALL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> etiqueta</span></span></code></pre></div><p><em>etiqueta</em> debe ser una etiqueta que apunta a una instrucción.</p><h3 id="ejemplo" tabindex="-1">Ejemplo <a class="header-anchor" href="#ejemplo" aria-label="Permalink to &quot;Ejemplo&quot;">​</a></h3><div class="language-vonsim vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vonsim</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            call</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rutina </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            hlt</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rutina:     </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">add</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> al</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">           </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            ret</span></span></code></pre></div><h2 id="codificacion" tabindex="-1">Codificación <a class="header-anchor" href="#codificacion" aria-label="Permalink to &quot;Codificación&quot;">​</a></h2><p><code>1100_1101</code>, <em>dir</em></p>`,10)]))}const k=i(n,[["render",l]]);export{u as __pageData,k as default};
