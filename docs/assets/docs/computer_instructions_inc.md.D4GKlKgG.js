import{_ as t,c as d,o,ag as c}from"./chunks/framework.BRWBV1zN.js";const m=JSON.parse('{"title":"INC","description":"","frontmatter":{},"headers":[],"relativePath":"computer/instructions/inc.md","filePath":"computer/instructions/inc.md","lastUpdated":1753646491000}'),i={name:"computer/instructions/inc.md"};function a(n,e,r,l,s,p){return o(),d("div",null,e[0]||(e[0]=[c('<h1 id="inc" tabindex="-1">INC <a class="header-anchor" href="#inc" aria-label="Permalink to &quot;INC&quot;">​</a></h1><p>Esta instrucción suma uno al operando destino y almacena el resultado en el mismo operando.</p><p>Los <a href="./../cpu.html#flags"><em>flags</em></a> se modifican de la siguiente manera:</p><ul><li>Si la suma no entra en el operando destino, entonces <code>CF=1</code>. De lo contrario, <code>CF=0</code>.</li><li>Si el resultado es cero, entonces <code>ZF=1</code>. De lo contrario, <code>ZF=0</code>.</li><li>Si el el bit más significativo del resultado es <code>1</code>, entonces <code>SF=1</code>. De lo contrario, <code>SF=0</code>.</li><li>Si el operando es positivo y el resultado negativo, entonces <code>OF=1</code>. De lo contrario, <code>OF=0</code>.</li></ul><h2 id="uso" tabindex="-1">Uso <a class="header-anchor" href="#uso" aria-label="Permalink to &quot;Uso&quot;">​</a></h2><div class="language-vonsim vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vonsim</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">INC</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dest</span></span></code></pre></div><p><em>dest</em> puede ser un registro o una dirección de memoria (ver <a href="./../assembly.html#operandos">tipos de operandos</a>).</p><h2 id="codificacion" tabindex="-1">Codificación <a class="header-anchor" href="#codificacion" aria-label="Permalink to &quot;Codificación&quot;">​</a></h2><ul><li>Registro<br><code>0100010w</code>, <code>00000rrr</code></li><li>Memoria (directo)<br><code>0100010w</code>, <code>11000000</code>, <em>dir-low</em>, <em>dir-high</em></li><li>Memoria (indirecto)<br><code>0100010w</code>, <code>11010000</code></li><li>Memoria (indirecto con desplazamiento)<br><code>0100010w</code>, <code>11100000</code>, <em>desp-low</em>, <em>desp-high</em></li></ul><p>Donde <code>w</code> es el bit de tamaño de los operandos. <code>w=0</code> indica operandos de 8 bits y <code>w=1</code> operandos de 16 bits.</p><p><code>rrr</code> codifica un registro según la siguiente tabla:</p><table tabindex="0"><thead><tr><th style="text-align:center;"><code>rrr</code></th><th style="text-align:center;"><code>w=0</code></th><th style="text-align:center;"><code>w=1</code></th></tr></thead><tbody><tr><td style="text-align:center;"><code>000</code></td><td style="text-align:center;"><code>AL</code></td><td style="text-align:center;"><code>AX</code></td></tr><tr><td style="text-align:center;"><code>001</code></td><td style="text-align:center;"><code>CL</code></td><td style="text-align:center;"><code>CX</code></td></tr><tr><td style="text-align:center;"><code>010</code></td><td style="text-align:center;"><code>DL</code></td><td style="text-align:center;"><code>DX</code></td></tr><tr><td style="text-align:center;"><code>011</code></td><td style="text-align:center;"><code>BL</code></td><td style="text-align:center;"><code>BX</code></td></tr><tr><td style="text-align:center;"><code>100</code></td><td style="text-align:center;"><code>AH</code></td><td style="text-align:center;"><code>SP</code></td></tr><tr><td style="text-align:center;"><code>101</code></td><td style="text-align:center;"><code>CH</code></td><td style="text-align:center;">--</td></tr><tr><td style="text-align:center;"><code>110</code></td><td style="text-align:center;"><code>DH</code></td><td style="text-align:center;">--</td></tr><tr><td style="text-align:center;"><code>111</code></td><td style="text-align:center;"><code>BH</code></td><td style="text-align:center;">--</td></tr></tbody></table>',12)]))}const h=t(i,[["render",a]]);export{m as __pageData,h as default};
