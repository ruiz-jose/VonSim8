import{_ as a,c as o,o as t,ag as i}from"./chunks/framework.BRWBV1zN.js";const u=JSON.parse('{"title":"POPF","description":"","frontmatter":{},"headers":[],"relativePath":"computer/instructions/popf.md","filePath":"computer/instructions/popf.md","lastUpdated":1754003685000}'),s={name:"computer/instructions/popf.md"};function c(n,e,r,l,p,d){return t(),o("div",null,e[0]||(e[0]=[i('<h1 id="popf" tabindex="-1">POPF <a class="header-anchor" href="#popf" aria-label="Permalink to &quot;POPF&quot;">​</a></h1><p>Esta instrucción desapila el elemento en el tope en la <a href="./../cpu.html#pila">pila</a> y lo almacena en el registro <a href="./../cpu.html#flags"><code>FLAGS</code></a>. Los <a href="./../cpu.html#flags"><em>flags</em></a> se modificarán acordemente.</p><p>Esta instrucción primero lee el valor apuntado por <code>SP</code> y lo guarda en el registro <code>FLAGS</code>, para luego incrementar el registro <code>SP</code> en 1.</p><h2 id="uso" tabindex="-1">Uso <a class="header-anchor" href="#uso" aria-label="Permalink to &quot;Uso&quot;">​</a></h2><div class="language-vonsim vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vonsim</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">POPF</span></span></code></pre></div><h2 id="codificacion" tabindex="-1">Codificación <a class="header-anchor" href="#codificacion" aria-label="Permalink to &quot;Codificación&quot;">​</a></h2><p><code>01111000</code></p>',7)]))}const m=a(s,[["render",c]]);export{u as __pageData,m as default};
