import{_ as o,c as a,o as i,ag as d}from"./chunks/framework.BRWBV1zN.js";const u=JSON.parse('{"title":"PIO","description":"","frontmatter":{},"headers":[],"relativePath":"io/modules/pio.md","filePath":"io/modules/pio.md","lastUpdated":1754335939000}'),c={name:"io/modules/pio.md"};function s(t,e,r,n,l,m){return i(),a("div",null,e[0]||(e[0]=[d('<h1 id="pio" tabindex="-1">PIO <a class="header-anchor" href="#pio" aria-label="Permalink to &quot;PIO&quot;">​</a></h1><p>El <em>programmed input-output</em> (PIO) es un módulo que hace de interfaz para conectar dispositivos genéricos al CPU. Está basado en el PPI 8255 de Intel en su modo &quot;0&quot;, pero con algunas modificaciones para simplificar su funcionamiento.</p><p>Cuenta con dos puertos de 8 bits (A y B) programables. Los registros disponibles son:</p><ul><li><code>PA</code> (dirección <code>30h</code> de la <a href="./index.html">memoria E/S</a>),</li><li><code>PB</code> (dirección <code>31h</code> de la <a href="./index.html">memoria E/S</a>),</li><li><code>CA</code> (dirección <code>32h</code> de la <a href="./index.html">memoria E/S</a>),</li><li>y <code>CB</code> (dirección <code>33h</code> de la <a href="./index.html">memoria E/S</a>).</li></ul><p>El valor del puerto A se encuentra en el registro <code>PA</code> y su configuración en el registro <code>CA</code>. El registro <code>CA</code> también es de 8 bits y le indica al PIO el modo cada bit: un <code>0</code> si es de salida y un <code>1</code> si es de entrada. Por ejemplo, para <code>CA = 00001111b</code>, los cuatro bits más significativos son de salida y los cuatro menos significativos son de entrada. El puerto B funciona idénticamente.</p><p>El PIO puede estar conectado a <a href="./../devices/switches-and-leds.html">llaves y luces</a> o a una <a href="./../devices/printer.html">impresora</a>.</p>',6)]))}const h=o(c,[["render",s]]);export{u as __pageData,h as default};
