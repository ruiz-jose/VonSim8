import{_ as i,c as a,o as n,ag as e}from"./chunks/framework.BRWBV1zN.js";const c=JSON.parse('{"title":"Lenguaje ensamblador","description":"","frontmatter":{},"headers":[],"relativePath":"computer/assembly.md","filePath":"computer/assembly.md","lastUpdated":1754792004000}'),l={name:"computer/assembly.md"};function p(t,s,h,k,r,d){return n(),a("div",null,s[0]||(s[0]=[e(`<h1 id="lenguaje-ensamblador" tabindex="-1">Lenguaje ensamblador <a class="header-anchor" href="#lenguaje-ensamblador" aria-label="Permalink to &quot;Lenguaje ensamblador&quot;">​</a></h1><p>El lenguaje ensamblador (o lenguaje <em>assembly</em>) utilizado por el simulador se escribe de la siguiente manera:</p><div class="language-vonsim vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vonsim</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">; Este es un comentario</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">; Empieza con un punto y coma y termina al final de la línea</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">; Todas las directivas y mnemónicos se pueden escribir en mayúsculas</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">; o minúsculas (MOV o mov).</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">db</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 24</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     ; DB es la directiva para escribir un byte en memoria.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">          ; En este caso, se escribe el byte 24.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">db</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 7</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  ; Dirección sin etiqueta </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">etq </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">db</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 7</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  ; &#39;etq&#39; es una etiqueta. Se utiliza para referenciar una dirección</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">          ; de memoria.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">db</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 24h</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    ; Los números hexadecimales se escriben con un sufijo h.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">          ; En este caso, se escribe el byte 24h (36).</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">db</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10b</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    ; Los números binarios se escriben con un sufijo b.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">          ; En este caso, se escribe el byte 10b (2) .</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">z </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">db</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;0&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    ; Los caracteres se escriben entre comillas simples.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">          ; En este caso, se escribe el byte 30h (48).</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">db</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ?</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      ; El símbolo ? indica que el valor del byte es desconocido. En</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">          ; este caso, no se escribe nada la dirección.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">str </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">db</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Hola, Mundo!&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> ; También se pueden escribir cadenas de texto en ASCII,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                      ; (H=48h, o=6Fh, l=6Ch, a=61h, ...). En este caso, se</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                      ; guardará la cadena.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">v </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">db</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> ; Se pueden escribir varios bytes en una misma línea.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cinco </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">equ</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> ; EQU es la directiva de equivalencia. Se utiliza para definir</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            ; constantes. En este caso, se define la constante &#39;cinco&#39; con</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            ; el valor 5. No se reserva memoria para esta constante.</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">;Los datos se cargan en memoria despues del código.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mov</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> al</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">bl</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> ; Las instrucciones se escriben con mnemónicos. En este caso, se</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">           ; copia el contenido del registro BL en el registro AL.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">           ; Los operandos van separados por coma.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">inst: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mov</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> al</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> ; Las etiquetas se pueden utilizar para referenciar una</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                ; instrucción. La etiqueta &#39;inst&#39; se puede utilizar para</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                ; referenciar la ubicación en memoria de este MOV.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">jmp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> inst        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">; Aquí se salta a la dirección &#39;inst&#39;.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hlt</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">; La instrucción HLT indica a la CPU que debe detenerse</span></span></code></pre></div><h2 id="operandos" tabindex="-1">Operandos <a class="header-anchor" href="#operandos" aria-label="Permalink to &quot;Operandos&quot;">​</a></h2><p>Las instrucciones pueden recibir varios tipos de operandos.</p><h3 id="registros" tabindex="-1">Registros <a class="header-anchor" href="#registros" aria-label="Permalink to &quot;Registros&quot;">​</a></h3><p>Los registros accesibles por el usuario de 8 bits son <code>AL</code>, <code>BL</code>, <code>CL</code> y <code>DL</code>.</p><h3 id="direcciones-de-memoria" tabindex="-1">Direcciones de memoria <a class="header-anchor" href="#direcciones-de-memoria" aria-label="Permalink to &quot;Direcciones de memoria&quot;">​</a></h3><p>Las direcciones de memoria se pueden expresar de varias formas:</p><div class="language-vonsim vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vonsim</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">; [12h] ; Dirección de memoria directa</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">; [bl]    ; Dirección de memoria indirecta</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mov</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> al</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12h</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mov</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> al</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">bl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><p>En el primer caso, se accede directamente a la dirección de memoria <code>12h</code>. En el segundo caso, se accede a la dirección de memoria almacenada en <code>BL</code>. Para el modo de direccionamiento indirecto solo se puede utilizar el registro <code>BL</code>.</p><h3 id="valores-inmediatos" tabindex="-1">Valores inmediatos <a class="header-anchor" href="#valores-inmediatos" aria-label="Permalink to &quot;Valores inmediatos&quot;">​</a></h3><p>Los valores inmediatos son valores que se pueden determinar al momento de ensamblar el programa. Por ejemplo, en <code>mov al, 5</code> se sabe que se debe copiar el número <code>5</code> en <code>AL</code>, por lo que el número <code>5</code> es un valor inmediato que se almacena en memoria. En cambio, en <code>mov al, [bl]</code> no se sabe qué valor se debe copiar en <code>AL</code>, ya que depende del contenido de <code>BL</code>. Por lo tanto, <code>[bl]</code> no es un valor inmediato.</p><p>Estos valores inmediatos son números, que se pueden escribir de la siguiente forma:</p><div class="language-vonsim vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vonsim</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">24</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      ; Decimal</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">18h</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     ; Hexadecimal</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">11000b</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  ; Binario</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;0&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     ; Carácter ASCII</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">F0h    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">; Si el número empieza con una letra,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        ; se debe escribir un 0 antes.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">13</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8h</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       ; Operaciones aritméticas</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">13</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">7</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;A&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cinco   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">; Constantes definidas con la directiva EQU y etiquetas a instrucciones</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">offset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> etq </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">; Dirección de memoria de la etiqueta &#39;etq&#39;</span></span></code></pre></div><p>Tantos los caracteres (<code>&#39;a&#39;</code>) como las cadenas de texto (<code>&quot;texto&quot;</code>) se convierten a su valor ASCII según la <a href="./../reference/ascii.html">tabla ASCII utilizada por VonSim</a>.</p>`,16)]))}const g=i(l,[["render",p]]);export{c as __pageData,g as default};
