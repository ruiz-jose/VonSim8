import{_ as a,c as i,o as e,ag as n}from"./chunks/framework.BRWBV1zN.js";const k=JSON.parse('{"title":"JC","description":"","frontmatter":{},"headers":[],"relativePath":"computer/instructions/jc.md","filePath":"computer/instructions/jc.md","lastUpdated":1753536382000}'),t={name:"computer/instructions/jc.md"};function l(p,s,o,h,c,d){return e(),i("div",null,s[0]||(s[0]=[n(`<h1 id="jc" tabindex="-1">JC <a class="header-anchor" href="#jc" aria-label="Permalink to &quot;JC&quot;">​</a></h1><p>Esta instrucción salta solo sí <code>CF=1</code>. Los <a href="./../cpu.html#flags"><em>flags</em></a> no se modifican.</p><p>De saltar, copiará la dirección de salto en <code>IP</code>.</p><h2 id="uso" tabindex="-1">Uso <a class="header-anchor" href="#uso" aria-label="Permalink to &quot;Uso&quot;">​</a></h2><div class="language-vonsim vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vonsim</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">JC</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> etiqueta</span></span></code></pre></div><p><em>etiqueta</em> debe ser una etiqueta que apunta a una instrucción.</p><h3 id="ejemplo" tabindex="-1">Ejemplo <a class="header-anchor" href="#ejemplo" aria-label="Permalink to &quot;Ejemplo&quot;">​</a></h3><div class="language-vonsim vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vonsim</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        org</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2000h</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">salto:  </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">push</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ax</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        ; --- etc ---</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        jc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> salto </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">; Válido</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        jc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2000h</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> ; Inválido, debe ser una etiqueta</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        hlt</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        end</span></span></code></pre></div><h2 id="codificacion" tabindex="-1">Codificación <a class="header-anchor" href="#codificacion" aria-label="Permalink to &quot;Codificación&quot;">​</a></h2><p><code>00100000</code>, <em>dir-low</em>, <em>dir-high</em></p>`,10)]))}const u=a(t,[["render",l]]);export{k as __pageData,u as default};
