import{_ as a,c as i,o as t,ag as s}from"./chunks/framework.BRWBV1zN.js";const u=JSON.parse('{"title":"INT","description":"","frontmatter":{},"headers":[],"relativePath":"computer/instructions/int.md","filePath":"computer/instructions/int.md","lastUpdated":1758822955000}'),n={name:"computer/instructions/int.md"};function o(r,e,c,l,d,p){return t(),i("div",null,e[0]||(e[0]=[s('<h1 id="int" tabindex="-1">INT <a class="header-anchor" href="#int" aria-label="Permalink to &quot;INT&quot;">​</a></h1><p>Esta instrucción emite una <a href="./../cpu.html#interrupciones">interrupción</a> por software. El <a href="./../cpu.html#flags"><em>flag</em></a> <code>IF</code> cambia a <code>0</code> obligatoriamente porque se va a ejecutar una interrupción. Los demás <em>flags</em> no se modifican.</p><h2 id="uso" tabindex="-1">Uso <a class="header-anchor" href="#uso" aria-label="Permalink to &quot;Uso&quot;">​</a></h2><div class="language-vonsim vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vonsim</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">INT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> N</span></span></code></pre></div><p><em>N</em> es el número de interrupción (0-255), que debe ser inmediato (ver <a href="./../assembly.html#operandos">tipos de operandos</a>).</p><p>Utiliza el mismo mecanismo de vector de interrupciones que las interrupciones por hardware. Generalmente se utiliza para realizar <a href="./../cpu.html#llamadas-al-sistema">llamadas al sistema</a>, pero si se la llama con cualquier otro número, se ejecutará la rutina de interrupción asociada a ese número.</p><h2 id="codificacion" tabindex="-1">Codificación <a class="header-anchor" href="#codificacion" aria-label="Permalink to &quot;Codificación&quot;">​</a></h2><p><code>00011010</code>, <em>número de interrupción</em></p>',8)]))}const h=a(n,[["render",o]]);export{u as __pageData,h as default};
