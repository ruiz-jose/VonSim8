import{_ as d,c,o,j as t,ag as i,a}from"./chunks/framework.BRWBV1zN.js";const u=JSON.parse('{"title":"Codificación","description":"","frontmatter":{},"headers":[],"relativePath":"reference/encoding.md","filePath":"reference/encoding.md","lastUpdated":1758292956000}'),n={name:"reference/encoding.md"};function r(l,e,s,M,D,x){return o(),c("div",null,e[0]||(e[0]=[t("h1",{id:"codificacion",tabindex:"-1"},[a("Codificación "),t("a",{class:"header-anchor",href:"#codificacion","aria-label":'Permalink to "Codificación"'},"​")],-1),t("p",null,"Aquí se denota la codificación en binario de cada una de las instrucciones del simulador. Pese a que el set de instrucciones esté basado en el del Intel 8088, la codificación se simplificado con fines prácticos y didácticos.",-1),t("table",{tabindex:"0"},[t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"Categoría"),t("th",{style:{"text-align":"center"}},"Instrucción"),t("th",{style:{"text-align":"center"}},"Código operación"),t("th",{style:{"text-align":"center"}},"Operandos"),t("th",{style:{"text-align":"left"}},"Acción")])]),t("tbody",null,[t("tr",null,[t("td",{style:{"text-align":"center"}},"Transferencia de datos"),t("td",{style:{"text-align":"center"}},"MOV"),t("td",{style:{"text-align":"center"},"0,":"","1,":"",2:""}),t("td",{style:{"text-align":"center"}},"2"),t("td",{style:{"text-align":"left"}},"Copiar entre registros, cargar de memoria a registro, almacenar en memoria")]),t("tr",null,[t("td",{style:{"text-align":"center"}},"Procesamiento de datos"),t("td",{style:{"text-align":"center"}},"ADD"),t("td",{style:{"text-align":"center"},"3,":"","4,":"",5:""}),t("td",{style:{"text-align":"center"}},"2"),t("td",{style:{"text-align":"left"}},"Operación aritmética: operando1 ← operando1 + operando2")]),t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"SUB"),t("td",{style:{"text-align":"center"},"6,":"","7,":"",8:""}),t("td",{style:{"text-align":"center"}},"2"),t("td",{style:{"text-align":"left"}},"Operación aritmética: operando1 ← operando1 - operando2")]),t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"CMP"),t("td",{style:{"text-align":"center"},"9,":"","10,":"",11:""}),t("td",{style:{"text-align":"center"}},"2"),t("td",{style:{"text-align":"left"}},"Comparación: operando1 - operando2 (no actualiza el destino)")]),t("tr",null,[t("td",{style:{"text-align":"center"}},"Control de flujo"),t("td",{style:{"text-align":"center"}},"JMP / Jxx"),t("td",{style:{"text-align":"center"},12:""}),t("td",{style:{"text-align":"center"}},"1"),t("td",{style:{"text-align":"left"}},"Salto incondicional JMP, condicionales Jxx")]),t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"HLT"),t("td",{style:{"text-align":"center"},13:""}),t("td",{style:{"text-align":"center"}},"0"),t("td",{style:{"text-align":"left"}},"HLT: detiene el CPU")])])],-1),i("",20)]))}const g=d(n,[["render",r]]);export{u as __pageData,g as default};
