name: 🏷️ Release

on:
  push:
    tags:
      - "v*" # Se activa con tags como v1.0.0, v1.2.3, etc.

env:
  NODE_VERSION: "22"
  PNPM_VERSION: "10"

jobs:
  # Job de validación de release
  validate-release:
    name: ✅ Validate Release
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 📋 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🧪 Run all tests
        run: pnpm test:no-assembler

      - name: 🏗️ Build project
        run: |
          pnpm build
          pnpm --dir app run build

      - name: 📋 Upload release build
        uses: actions/upload-artifact@v4
        with:
          name: release-build-${{ github.ref_name }}
          path: app/dist/
          retention-days: 90

  # Job de creación de release
  create-release:
    name: 🚀 Create Release
    runs-on: ubuntu-latest
    needs: validate-release
    permissions:
      contents: write
      issues: write
      pull-requests: write

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 📋 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🏗️ Build project
        run: pnpm build

      - name: 📋 Download release build
        uses: actions/download-artifact@v4
        with:
          name: release-build-${{ github.ref_name }}
          path: app/dist/

      - name: 📦 Compress release assets
        run: |
          if [ -d "app/dist" ]; then
            tar -czf vonsim8-${{ github.ref_name }}.tar.gz -C app/dist .
          else
            echo "Error: app/dist directory not found"
            exit 1
          fi

      - name: 🏷️ Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          generate_release_notes: true
          draft: false
          prerelease: false
          files: vonsim8-${{ github.ref_name }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 📋 Create release summary
        run: |
          echo "## 🏷️ Release Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Version:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Tag:** ${{ github.ref }}" >> $GITHUB_STEP_SUMMARY
          echo "**Released at:** $(date)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Release URL:** https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Live Demo:** https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/" >> $GITHUB_STEP_SUMMARY

  # Job de notificación
  notify-release:
    name: 📢 Notify Release
    runs-on: ubuntu-latest
    needs: create-release
    if: success()

    steps:
      - name: 📊 Release notification
        uses: actions/github-script@v8
        with:
          script: |
            const tagName = context.ref.replace('refs/tags/', '');
            try {
              const { data: release } = await github.rest.repos.getReleaseByTag({
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag: tagName,
              });

              console.log(`🚀 Release created successfully!`);
              console.log(`📦 Version: ${release.tag_name}`);
              console.log(`🔗 URL: ${release.html_url}`);
              console.log(`📝 Description: ${release.body ? release.body.substring(0, 100) + '...' : 'Auto-generated release notes'}`);
            } catch (error) {
              console.log(`❌ Could not find release for tag ${tagName}: ${error.message}`);
            }

            // Opcional: Enviar notificación a Discord/Slack/etc.
            // Aquí puedes agregar integraciones con otros servicios
